
	클래스와 객체

	레시피 - 재료와 조리과정
	클래스 - 멤버변수와 메서드

	생각해봅시다 level 1
	1. 쭈꾸미 레시피는 실제 사람이 먹을 음식이라고 할수 있을까?
	    레시피는 실제 음식을 만들기위한 재료와 조리 과정으로 실제 먹을 음식을 만드는 방법이라고 볼 수 있다.
	    방법은 음식이 아니고, 방법을 사용하여 만들어진 음식이 실제 사람이 먹을 수 있는 음식이라고 볼 수 있다.

	2. 레시피는 왜 만들었을까?
	    하나의 음식을 만드는 데 다양한 방법이 있겠지만,
	    그 중 맛있는 음식을 만드는 방법을 기록하고 다음에 똑같이 만들 수 있도록 기록해 둔것이다.
	    (재사용성이 높기 때문이다.)	    

	3. 레시피와 실제 만들어진 음식은 어떤 차이가 있을까?
	    레시피는 음식을 만들기위한 방법을 기록해둔 것이고, 음식은 사람이 먹기위해 다양한 재료와 조리과정을 거친 결과물이다.

	생각해봅시다 level 2
	1. 레시피는 1개만 있고 레시피를 통해 만들어진 음식도 1개라고 말 할 수 있을까?
	    레시피가 있는 이유는 동일한 맛을 내는 음식을 여러개 만들 수 있도록 한 것으로, 동일 레시피로 만들어진 음식은 여러개라고 볼 수 있다.
	    (있을 수 도 있고 없을 수 도 있다. 음식을 하나만 만들었다면 음식도 1개라고 말 할 수는 있다. 또한, 이 음식들은 독립적으로 보아야 한다.)

	2. 레시피가 있다면 음식도 만들어 진 것일까?
	    레시피가 음식을 뜻하는 것은 아니고 만드는 방법을 뜻하는 것이므로 음식이라고는 할 수 없다.

	3. 서로 다른 쭈꾸미 레시피로 각각 요리를 했다면 음식은 쭈꾸미라는 성격을 갖는다. 이 음식은 서로 같은 음식이라고 할 수 있을까?
	    레시피가 다르더라도 쭈꾸미 요리를 만들 수 있다.

	생각해봅시다 level 3
	1. 레시피는 여러 사람과 공유할 수 있다. 이때 레시피는 하나이고 레시피를 참조하는 사람도 1명 일까?
	    한명일수도, 여러명일수도 있다. 
	    (클래스는 공유한다는 점이 중요하고, 공유가 가능할 때 자원의 낭비를 줄일 수 있다.
	     하지만, 개인적인 내용의 공유는 해서는 안되며, 악의적으로 공유할 경우 위험할 수 있다.)
	    (프로그램밍의 관점으로 생각했을 때, 공유는 램의 저장공간을 효율적 활용이 가능하다.)
	    (클래스로 만들어진 객체는 서로 독립적이지만, 여러 사람이 공유해서 사용이 가능하다.)

	2. 여러 사람이 하나의 레시피를 참조 할 때, 어떤 사람이 레시피를 수정한다면 다른 사람은 수정된 레시피를 볼까? 아니면 수정되지 않은 상태의 레시피를 볼까?
	    사용자의 여건에 맞춰 원하는 레시피를 선택해서 음식을 조리할 수 있을것이다.
	    (레시피를 누군구가 수정했을 때, 레시피를 공유하는 사람들은 수정된 레시피를 보게된다. → 공유 기능의 특징)

	생각해봅시다 level 4
	1. 쭈꾸미 레시피를 보면 재료와 조리과정이 있다.
	    (레시피/클래스, 재료/멤버변수, 조리과정/메서드)

	결론
	- 레시피와 음식이 있다.
	- 이중 클래스와 비슷한 의미를 갖는 것은?
	- 객체와 비슷한 의미를 갖는 것은?
	- 레시피로 사람이 만들어야 음식이 된다.
	- 클래스는 new(객체를 만드는 역할을 수행한다.) 연산자로 객체를 만든다.


	예시 문제
	Random r = new Random();
	Random r1 = r;
	Random r2 = null;
	Random r3 = new Random();